services:
  # Permit Management Server (using host database)
  server:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: permit-server-prod
    restart: unless-stopped
    environment:
      DATABASE_URL: jdbc:postgresql://host.docker.internal:5432/${POSTGRES_DB:-permit_management_prod}
      DB_USER: ${POSTGRES_USER:-permit_user}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: 8080
      SERVER_HOST: 0.0.0.0
      ENVIRONMENT: production
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      UPLOAD_MAX_SIZE: ${UPLOAD_MAX_SIZE:-10485760}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-*}
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    ports:
      - "127.0.0.1:8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/counties"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: permit-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local
