services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: permit-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-permit_management_prod}
      POSTGRES_USER: ${POSTGRES_USER:-permit_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups:rw
    ports:
      - "127.0.0.1:5433:5432"
    networks:
      - permit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-permit_user} -d ${POSTGRES_DB:-permit_management_prod}"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Permit Management Server
  server:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: permit-server-prod
    restart: unless-stopped
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-permit_management_prod}
      DB_USER: ${POSTGRES_USER:-permit_user}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: 8080
      SERVER_HOST: 0.0.0.0
      ENVIRONMENT: production
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      UPLOAD_MAX_SIZE: ${UPLOAD_MAX_SIZE:-10485760}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-*}
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    networks:
      - permit-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/counties"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: permit-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - permit-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: permit-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx-web.conf:/etc/nginx/nginx.conf:ro
      - ./web-app-production.html:/usr/share/nginx/html/index.html:ro
      - ./web-demo.html:/usr/share/nginx/html/demo.html:ro
      - uploads_data:/var/www/uploads:ro
    networks:
      - permit-network
    depends_on:
      - server
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  permit-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
